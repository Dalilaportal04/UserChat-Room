import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class user implements Runnable {
    
    private Socket user; //Inner class which is going to handle inputs so this class can access the attributes
    private BufferedReader in;
    private PrintWriter out;
    private boolean done;

    @Override
    public void run() {
        try {
            user = new Socket("127.0.0.1", 9999); //Local area server
            out = new PrintWriter(user.getOutputStream(), true);
            in = new BufferedReader(new InputStreamReader(user.getInputStream()));
            
            InputHandler inHandler = new InputHandler();
            Thread t = new Thread(inHandler);
            t.start();
            
            String inMessage;
            while ((inMessage = in.readLine()) != null) {
                System.out.println(inMessage);
            }
        }
        catch (IOException e) {
            shutdown();
        }
    }

    public void shutdown() {
        done = true;
        try {
            in.close(); // Closing input stream
            out.close(); // Closing output writer
            if (!user.isClosed()) {
                user.close(); // Closing the user
            }
        }
        catch (IOException e) {
            //ignore
        }
    }

    class InputHandler implements Runnable {

        @Override
        public void run() {
            try {
                BufferedReader inReader = new BufferedReader(new InputStreamReader(System.in)); //Passing the command line input which means when readline is called we will be able to input something
                while(!done) {
                    String message = inReader.readLine();
                    if (message.equals("/quit")) {
                        out.println(message);
                        inReader.close();
                        shutdown(); 
                    }
                    else {
                        out.println(message);
                    }
                }
            }
            catch (IOException e) {
                shutdown();
            }
        }
    }
    /**
     * @param args
     */
    public static void main(String[] args) {
        user User = new user();
        User.run(); 
    }
}
